/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */


buildscript {
    ext {
    }
    repositories {
        mavenCentral()
        maven { url 'http://repo.navercorp.com/maven2' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.0.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'http://repo.navercorp.com/maven2' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.shin'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    configurations {
        developmentOnly
        runtimeClassPath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-aop'

        /** developer tools */
        // use lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        /** developer tools */

        // apache commons
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

        /** SQL , JDBC */
        implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'

        /** validation */
        implementation('org.springframework.boot:spring-boot-starter-validation')

        /** https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations */
        implementation 'com.fasterxml.jackson.core:jackson-annotations'

        implementation group: 'commons-io', name: 'commons-io', version: '2.6'

        /** https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient */
        implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'

        /** test */
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnit()
        jacoco {
            destinationFile = file("${buildDir}/reports/jacoco/jacoco.exec")
        }
    }
}

def jarProjects = [project(':service-common')]
def executableProjects = [project(':admin'), project(':main')]

configure(jarProjects) {
    bootJar.enabled = false
    jar.enabled = true

    dependencies {

    }
}

configure(executableProjects) {
    dependencies {
        // configuration processor : yaml 사용
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        /** template engines : thymeleaf */
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

        /** developer tools */
        // spring boot devtools, hot deploy
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        /** developer tools */
        runtimeOnly 'mysql:mysql-connector-java'
    }
}

project(':main') {
    dependencies {
        compile project(':service-common')
    }

    task unpack(type: Copy) {
        dependsOn bootJar
        from(zipTree(tasks.bootJar.outputs.files.singleFile))
        into("build/dependency")
    }
}

project(':admin') {
    dependencies {
        compile project(':service-common')
    }
}